server:
  port: 9095
  servlet:
    context-path: /book-query

spring:
  datasource:
    url: ${db.url}
    username: ${db.username}
    password: ${db.password}
    driverClassName: org.postgresql.Driver
    initialize: true
  jpa:
    show-sql: ${db.log.sql}
    database: POSTGRESQL
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_schema: ${db.default-schema}
        dialect: org.hibernate.dialect.PostgreSQL81Dialect
  kafka:
    listener:
      ack-mode: MANUAL_IMMEDIATE
    consumer:
      bootstrap-servers: localhost:9092
      group-id: happystays
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
    topic:
      name: BookingSuccessEvent

  sql:
    init:
      platform: postgres
      continue-on-error: true
      mode: always

config:
  issuer : http://localhost:9000
eureka:
  instance:
    prefer-ip-address: true
    status-page-url-path: /actuator/info
    health-check-url-path: /actuator/health
    instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${eureka.service-url.default}